0       3.4E+
1       3+3E4
2       3.E4+
3       3.+E4
4       $@
LEXERR: Unrecognized_Symbol $
LEXERR: Unrecognized_Symbol @
5       
6       
7       program example(input, output);
8       var x, y: integer;
9       function gcd(a, b: integer): integer;
10      begin
11      	if b = 0 then gcd := a
12      	else gcd := gcd(b, a mod b)
13      end;
14      {comment}
15      {multi line comment
16      }
17      {
18      	again
19      }
20      } {bad comment}
LEXERR: Unrecognized_Symbol }
21      { { another bad comment}
LEXERR: CommentContains2ndLeftCurlyBrace { {
22      begin
23      	fineidlen;
24      	toolongidentifier;
LEXERR: Id_TooLong toolongidentifier
25      	x := 12345;
26      	x := 1234567890;
27      	x := 12345678901;
LEXERR: Int_TooLong 12345678901
28      	x := 012345;
LEXERR: Int_LeadingZero 012345
29      	x := 123450;
30      
31      	y := 1.1;
32      	y := 01.1;
LEXERR: SReal1_LeadingZero 01.1
33      	y := 11111.2;
34      	y := 111111.2;
LEXERR: SReal1_TooLong 111111.2
35      	y := 1.22222;
36      	y := 1.222222;
LEXERR: SReal2_TooLong 1.222222
37      
38      
39      	z := 1.2E3;
40      	z := 01.2E3;
LEXERR: LReal1_LeadingZero 01.2E3
41      	z := 1.20E3;
42      	z := 1.2E03;
43      	z := 11111.2E3;
44      	z := 111111.2E3;
LEXERR: LReal1_TooLong 111111.2E3
45      	z := 1.22222E3;
46      	z := 1.222222E3;
LEXERR: LReal2_TooLong 1.222222E3
47      	z := 1.2E33;
48      	z := 1.2E333;
LEXERR: LReal3_TooLong 1.2E333
49      	z := 1.1E+3;
50      	z := 1.1E-3;
51      	z := 1.1E;
52      	z := 1.1E+;
53      	
54      	!
LEXERR: Unrecognized_Symbol !
55      
56      	w := 1.;
57      	w := .1;
58      	w := 1.e;
59      	w := .1e1;
60      	w := 1e.1;
61      	w := e.11;
62      
63      	x : x
64      
65      	read(x,y);
66      	write(gcd(x,y));
67      	
68      	read('literal');
69      	read('literal2');
70      	read('too_long_literal');
LEXERR: StrLit_TooLong 'too_long_literal'
71      	read('nonterminated_literal);
LEXERR: StrLit_StrLit_NotTerminated 'nonterminated_literal);
72      	read(''');
LEXERR: StrLit_StrLit_NotTerminated ');
73      
74      	if(x > 5 and x < 100 or y >= 0 and not y <= 100) then x:= 5 else x:= x
75      	do x:= x + 1 while x <> 10
76      
77      end
78      .
79      ÿ
