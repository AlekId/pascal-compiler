program example(input, output, output);
	var a: real;
	var x: integer;
	var y: array [0 .. 10] of integer;
	var y: array [0 .. 10.0] of real;

	procedure gcd(a: integer ; b: integer);
	begin
		if b = 0 then gcd := a;
		call gcd(b, a mod b, a);
	    call in1
	end;

	procedure gcd(a: array [ 0 .. 0] of integer ; b: integer);
		procedure in3(a: integer ; b: integer);
			var x: real;
			
			begin
			call gcd(b, a mod b)
			end;
		begin
			if b = 0 then gcd := a
		end;

	procedure in2;
		var a : array [0 .. 7] of integer;
		var b : array [1 .. 7] of real;
		var c : real;
		var d : array [1 .. 7] of integer;
		begin 
		end;
	procedure in3 (x:integer;y:real);
		begin 
		end;
begin
	call in1(a, b);
	call in2;
	call in3;
	x:= 1;
	x:= 1 * 1+1 / 1-1;

	if (x > 5) and ( x < 100) or (y >= 0) and not (y <= 100) then x:= 5 else x:= x;
	while x <> 10 
	do x := x + 1;

	if x + 5* a > x / a* 4 then call in3(x < 4 + (x*x+x/x-x)*(x) - 4) ;

	y[0] := 0;
	y := y[0];
	y := y;
	y[0] := y[x+a];
	y[x+a and y[0]] := x>5

end.
